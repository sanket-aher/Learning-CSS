h1{
    text-align: center;
}

/* Parent Container Properties : flex-direction,flex-wrap,justify-content,align-content,align-items. */
#container{
    width: 80%;
    height: 300px;
    margin: 10px auto;
    border: 2px solid black;
    background-color: azure;
    display: flex; /* It is a one-dimensional layout method for arranging items in rows or columns. By default its flex-direction is row.It works on main axis(horizontally) or cross axis(vertically) */
    flex-direction: row; /* It sets how flex items are placed in the flex container,along which axis and direction.It values are row(bydefault,main axis,left to right),row-reverse(main axis,right to left),column(main axis,top to bottom),column-reverse(main axis,bottom to top). */
    justify-content: space-evenly; /* Tells how the browser distributes space between and around content items along the main axis.It values are flex-start(bydefault),flex-end,center,space-between,space-around,space-evenly. */
    flex-wrap: wrap; /* Sets whether flex-items are forced onto one line or can wrap onto multiple line.It values are nowrap(bydefault),wrap,wrap-reverse. */
    align-items: flex-end; /* Distributes our items along the cross axis.It values are stretch(bydefault),flex-start,flex-end,center,baseline. */
    align-content: center; /* It sets the distribution of space between and around content items along a flexboxs cross axis.It values are flex-start,flex-end,center,space-between,space-around(bydefault),space-evenly,baseline */
}

#container div{
    height: 100px;
    width: 300px;
    color:white;
    text-align: center;
    font-size: 1.5em;
}

/* Child Container Properties : align-self,flex-basis,flex-grow,flex-shrink */
#childcontainer{
    width: 80%;
    height: 300px;
    margin: 10px auto;
    border: 2px solid black;
    background-color: azure;
    display: flex;
}

#childcontainer div{
    height: 100px;
    width: 100px;
    color:white;
    text-align: center;
    /* font-size: 1.5em; */
}

#org{
    align-self: flex-end; /* Aligns an item along the cross axis.It values are flex-start,flex-end,center,baseline. */
    flex-grow: 1;
}

#ywl{
    flex-basis: 100px; /* It sets the initial main size of a flex item. */
}

#blu{
    flex-grow: 2; /* It specifies how much of the flex containers remaining space should be assigned to the flex items main size. 1 is the default value. */
}

#vio{
    flex-shrink: 2; /* It sets the flex shrink factor of a flex item.You can see the effect on mobile view , inspect option on browser to increase and decrease */
}